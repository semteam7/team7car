/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.8 at Mon May  1 14:35:55 2017. */

#ifndef PB_VEHICLECOMMAND_PB_H_INCLUDED
#define PB_VEHICLECOMMAND_PB_H_INCLUDED
#include "pb.h"
/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _VehicleCommand {
    bool has_speed;
    uint64_t speed;
    bool has_acceleration;
    uint64_t acceleration;
    bool has_steeringWheelAngle;
    uint64_t steeringWheelAngle;
    bool has_brakeLights;
    bool brakeLights;
    bool has_flashingLightsLeft;
    bool flashingLightsLeft;
    bool has_flashingLightsRight;
    bool flashingLightsRight;
/* @@protoc_insertion_point(struct:VehicleCommand) */
} VehicleCommand;

/* Default values for struct fields */

/* Initializer values for message structs */
#define VehicleCommand_init_default              {false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}
#define VehicleCommand_init_zero                 {false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define VehicleCommand_speed_tag                 1
#define VehicleCommand_acceleration_tag          2
#define VehicleCommand_steeringWheelAngle_tag    3
#define VehicleCommand_brakeLights_tag           4
#define VehicleCommand_flashingLightsLeft_tag    5
#define VehicleCommand_flashingLightsRight_tag   6

/* Struct field encoding specification for nanopb */
extern const pb_field_t VehicleCommand_fields[7];

/* Maximum encoded size of messages (where known) */
#define VehicleCommand_size                      33

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define VEHICLECOMMAND_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
